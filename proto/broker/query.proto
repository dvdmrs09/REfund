syntax = "proto3";
package defundlabs.defund.broker;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "broker/broker.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/defund-labs/defund/x/broker/types";

// Query defines the gRPC querier service.
service Query {
  // QueryInterchainAccountFromAddress returns the interchain account for given owner address on a given connection pair
  rpc InterchainAccountFromAddress(QueryInterchainAccountFromAddressRequest) returns (QueryInterchainAccountFromAddressResponse);
  // QueryBrokerRequest returns the broker based on the broker id requested
  rpc Broker(QueryBrokerRequest) returns (QueryBrokerResponse) {
    option (google.api.http).get = "/defund-labs/defund/broker/broker/{broker}";
  };
  // QueryBrokersRequest returns all brokers
  rpc Brokers(QueryBrokersRequest) returns (QueryBrokersResponse) {
    option (google.api.http).get = "/defund-labs/defund/broker/broker";
  };
  // this line is used by starport scaffolding # 2
}

// QueryInterchainAccountFromAddressRequest is the request type for the Query/InterchainAccountAddress RPC
message QueryInterchainAccountFromAddressRequest {
  string owner                      = 1;
  string connection_id = 2 [(gogoproto.moretags) = "yaml:\"connection_id\""];
}

// QueryInterchainAccountFromAddressResponse the response type for the Query/InterchainAccountAddress RPC
message QueryInterchainAccountFromAddressResponse {
  string interchain_account_address = 1 [(gogoproto.moretags) = "yaml:\"interchain_account_address\""];
}

// QueryBrokerRequest is the request type for the Query/Broker RPC
message QueryBrokerRequest {
  string broker                      = 1;
}

// QueryBrokerResponse the response type for the Query/Broker RPC
message QueryBrokerResponse {
  Broker broker = 1 [(gogoproto.moretags) = "yaml:\"broker\""];
}

// QueryBrokersRequest is the request type for the Query/Brokers RPC
message QueryBrokersRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryBrokersResponse the response type for the Query/Brokers RPC
message QueryBrokersResponse {
  repeated Broker brokers = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
